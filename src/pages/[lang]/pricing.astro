---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PricingCard from '../../components/PricingCard.astro';
import FAQSection from '../../components/FAQSection.astro';
import { createTranslator } from '../../i18n/utils';
import { SUPPORTED_LANGUAGES } from '../../i18n/language-utils';
import type { Language } from '../../i18n/types';
import { EXTERNAL_LINKS } from '../../config/constants';
import '../../styles/pricing-page.css';

export async function getStaticPaths() {
  return SUPPORTED_LANGUAGES.map((lang) => ({
    params: { lang },
    props: { lang },
  }));
}

const { lang } = Astro.params as { lang: Language };
const { t, ta, to } = createTranslator(lang);

const priceFormatter = new Intl.NumberFormat(lang === 'en' ? 'en-US' : lang, {
  style: 'currency',
  currency: 'USD',
  maximumFractionDigits: 0,
});

const formatPrice = (amount: number) => priceFormatter.format(amount);

const buildPlan = ({
  id,
  monthlyPrice,
  description,
  isPopular = false,
  badgeLabel,
  badgeVariant,
  priceNote,
}: {
  id: string;
  monthlyPrice: number;
  description: string;
  isPopular?: boolean;
  badgeLabel?: string;
  badgeVariant?: string;
  priceNote?: string | null;
}) => {
  const yearlyPrice = monthlyPrice * 10;
  const price = formatPrice(monthlyPrice);
  const yearlyPriceFormatted = formatPrice(yearlyPrice);

  let period = monthlyPrice > 0
    ? t('pages.pricing.ui.monthOrYear', { price: yearlyPriceFormatted })
    : t('pages.pricing.ui.foreverFree');

  if (id === 'enterprise' && monthlyPrice > 0) {
    period = period.replace(yearlyPriceFormatted, `${yearlyPriceFormatted}*`);
  }

  return {
    id,
    name: t(`pages.pricing.plans.${id}.name`),
    price,
    priceNote: priceNote ?? (id === 'enterprise' ? t('pages.pricing.plans.enterprise.priceNote') : undefined),
    period,
    description,
    isPopular,
    badgeLabel,
    badgeVariant,
    features: ta(`pages.pricing.plans.${id}.features`)
  };
};

// Pricing plans data
const allPlans = [
  buildPlan({
    id: 'community',
    monthlyPrice: 0,
    description: t('pages.pricing.plans.community.description'),
    badgeLabel: t('pages.pricing.ui.foreverFree')
  }),
  buildPlan({
    id: 'pro',
    monthlyPrice: 349,
    description: t('pages.pricing.plans.pro.description')
  }),
  buildPlan({
    id: 'business',
    monthlyPrice: 699,
    description: t('pages.pricing.plans.business.description'),
    isPopular: true,
    badgeLabel: `${t('pages.pricing.ui.bestValue')} · ${t('pages.pricing.ui.limitedOffer')}`,
    badgeVariant: 'popular'
  }),
  buildPlan({
    id: 'enterprise',
    monthlyPrice: 2100,
    description: t('pages.pricing.plans.enterprise.description'),
    badgeLabel: t('pages.pricing.ui.anchor'),
    badgeVariant: 'anchor',
    priceNote: t('pages.pricing.plans.enterprise.priceNote')
  })
];

const technicalMetrics = ta('pages.pricing.technicalSummary.metrics');
const technicalValues = to('pages.pricing.technicalSummary.values');

const technicalCards = allPlans.map(plan => ({
  id: plan.id,
  name: plan.name,
  metrics: technicalMetrics.map((metric: any) => ({
    label: metric.label,
    value: technicalValues?.[plan.id]?.[metric.key] ?? '—'
  }))
}));
---

<BaseLayout
  lang={lang}
  title={t('pages.pricing.meta.title')}
  description={t('pages.pricing.meta.description')}
  keywords={t('pages.pricing.meta.keywords')}
  ogType="website"
  structuredDataType="organization"
>
  <article class="pricing-page">
    <!-- Hero Section -->
    <section id="pricing-plans" class="pricing-hero section-dark">
      <div class="pricing-hero-content">
        <h1>{t('pages.pricing.hero.title')}</h1>
        <p class="hero-subtitle">{t('pages.pricing.hero.subtitle')}</p>
      </div>
    </section>

    <!-- Pricing Toggle & Cards -->
    <section id="plans" class="pricing-content section-light">
      <div class="container">
        <div class="pricing-overview">
          <div class="pricing-overview-copy">
            <h3>{t('pages.pricing.strategy.heading')}</h3>
            <p>{t('pages.pricing.strategy.copy')}</p>
          </div>
          <ul class="pricing-distribution">
            {ta('pages.pricing.strategy.distribution').map((item: string) => (
              <li>{item}</li>
            ))}
          </ul>
        </div>

        <div class="pricing-grid active four-up">
          {allPlans.map(plan => (
            <PricingCard plan={plan} lang={lang} />
          ))}
        </div>

        <!-- Trust Section -->
        <div class="trust-section">
          <div class="trust-badges">
            <div class="trust-item">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4z"/>
              </svg>
              <span>{t('pages.pricing.trust.items.0')}</span>
            </div>
            <div class="trust-item">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M22 12h-4l-3 9L9 3l-3 9H2"/>
              </svg>
              <span>{t('pages.pricing.trust.items.1')}</span>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- FAQ Section (Moved up for early objection handling) -->
    <FAQSection lang={lang} />

    <!-- Professional Services Teaser Section -->
    <section class="ps-teaser-section section-dark">
      <div class="container">
        <div class="ps-teaser-content">
          <h2>{t('pages.pricing.psTeaser.heading')}</h2>
          <p class="ps-teaser-subtitle">{t('pages.pricing.psTeaser.subtitle')}</p>

          <div class="ps-teaser-packages">
            <div class="ps-teaser-card">
              <h3>{t('pages.pricing.psTeaser.packages.standard.name')}</h3>
              <p class="teaser-price">{t('pages.pricing.psTeaser.packages.standard.price')}</p>
            </div>
            <div class="ps-teaser-card popular">
              <div class="popular-badge">{t('pages.pricing.ui.popular')}</div>
              <h3>{t('pages.pricing.psTeaser.packages.priority.name')}</h3>
              <p class="teaser-price">{t('pages.pricing.psTeaser.packages.priority.price')}</p>
            </div>
            <div class="ps-teaser-card">
              <h3>{t('pages.pricing.psTeaser.packages.emergency.name')}</h3>
              <p class="teaser-price">{t('pages.pricing.psTeaser.packages.emergency.price')}</p>
            </div>
          </div>

          <a href={`/${lang}/professional-services`} class="btn btn-primary btn-large">
            {t('pages.pricing.psTeaser.viewDetails')}
          </a>
        </div>
      </div>
    </section>

    <!-- Enterprise CTA Section -->
    <section class="pricing-content section-light">
      <div class="container">
        <!-- Enterprise CTA -->
        <div class="enterprise-cta">
          <div class="enterprise-content">
            <h3>{t('pages.pricing.enterpriseCta.heading')}</h3>
            <p>{t('pages.pricing.enterpriseCta.description')}</p>
          </div>
          <a href={EXTERNAL_LINKS.SCHEDULE_CONSULTATION} target="_blank" rel="noopener noreferrer" class="btn btn-primary btn-large">
            {t('pages.pricing.enterpriseCta.button')}
          </a>
        </div>
      </div>
    </section>

    <!-- Technical Summary (For Technical Buyers) -->
    <section class="technical-details section-light">
      <div class="container">
        <div class="technical-summary">
          <div class="technical-summary-header">
            <h3>{t('pages.pricing.technicalSummary.heading')}</h3>
            <p>{t('pages.pricing.technicalSummary.description')}</p>
          </div>

          <div class="technical-grid">
            {technicalCards.map(card => (
              <div class="technical-card">
                <h4>{card.name}</h4>
                <dl class="technical-metrics">
                  {card.metrics.map(metric => (
                    <div class="technical-metric">
                      <dt>{metric.label}</dt>
                      <dd>{metric.value}</dd>
                    </div>
                  ))}
                </dl>
              </div>
            ))}
          </div>

          <div class="technical-summary-header" style="margin-top: var(--space-6);">
            <p style="white-space: pre-line;">{t('pages.pricing.technicalSummary.recoveryNote')}</p>
          </div>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section id="get-started" class="pricing-cta section-dark">
      <div class="container">
        <h2>{t('pages.pricing.finalCta.heading')}</h2>
        <p>{t('pages.pricing.finalCta.description')}</p>
        <div class="cta-actions">
          <a href={EXTERNAL_LINKS.SCHEDULE_CONSULTATION} target="_blank" rel="noopener noreferrer" class="btn btn-primary btn-large">
            {t('pages.pricing.finalCta.buttons.startFree')}
          </a>
          <a href={EXTERNAL_LINKS.SCHEDULE_CONSULTATION} target="_blank" rel="noopener noreferrer" class="btn btn-secondary btn-large">
            {t('pages.pricing.finalCta.buttons.talkToSales')}
          </a>
        </div>
      </div>
    </section>
  </article>
</BaseLayout>
