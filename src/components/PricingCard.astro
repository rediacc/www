---
import { EXTERNAL_LINKS } from '../config/constants';
import { createTranslator } from '../i18n/utils';
import type { Language } from '../i18n/types';

interface Props {
  plan: {
    id: string;
    name: string;
    price: string;
    priceNote?: string;
    period?: string | null;
    description: string;
    isPopular?: boolean;
    badgeLabel?: string;
    badgeVariant?: string;
    features: string[];
  };
  lang: Language;
}

const { plan, lang } = Astro.props;
const { t } = createTranslator(lang);

const cardClasses = ['pricing-card'];
if (plan.isPopular) {
  cardClasses.push('popular');
}
if (plan.badgeVariant) {
  cardClasses.push(`badge-${plan.badgeVariant}`);
}

const priceDisplay = plan.id === 'enterprise'
  ? `${plan.price}*`
  : plan.price;

const secondaryCta = plan.id === 'community'
  ? {
      href: `/${lang}/docs`,
      label: t('pages.pricing.ui.learnMore'),
      target: undefined,
      rel: undefined,
    }
  : {
      href: EXTERNAL_LINKS.SCHEDULE_CONSULTATION,
      label: t('pages.pricing.ui.contactSales'),
      target: '_blank',
      rel: 'noopener noreferrer',
    };
---

<div class={cardClasses.join(' ')}>
  {(plan.badgeLabel || plan.isPopular) && (
    <div class="popular-badge">{plan.badgeLabel ?? t('pages.pricing.ui.popular')}</div>
  )}

  <div class="card-header">
    <h3>{plan.name}</h3>
    <p class="card-description">{plan.description}</p>
  </div>

  <div class="card-price">
    <div class="price-wrapper">
      <span class="price">{priceDisplay}</span>
    </div>
    {plan.period && <span class="billing">{plan.period}</span>}
  </div>

  <div class="card-actions">
    <a href={EXTERNAL_LINKS.SCHEDULE_CONSULTATION} target="_blank" rel="noopener noreferrer" class="btn btn-primary btn-large">{t('pages.pricing.ui.getStarted')}</a>
    <a
      href={secondaryCta.href}
      class="btn btn-secondary btn-large"
      target={secondaryCta.target}
      rel={secondaryCta.rel}
    >
      {secondaryCta.label}
    </a>
  </div>

  <div class="card-features">
    <ul>
      {plan.features.map((feature) => (
        <li>
          <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
            <path d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"/>
          </svg>
          {feature}
        </li>
      ))}
    </ul>
  </div>

  {plan.priceNote && (
    <p class="price-note">{plan.priceNote}</p>
  )}
</div>
